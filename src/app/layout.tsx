import type { Metadata } from "next";
import { VisualEditing } from "next-sanity";
import { draftMode } from "next/headers";
import { DisableDraftMode } from "@/components/DisableDraftMode";
import { catalpa, itc } from '@/styles/fonts'
import { defineQuery } from "next-sanity";
import { client } from "@/sanity/lib/client";
import { type SanityDocument } from "next-sanity";
import { TailwindHelper } from "@/components/TailwindHelper";
import "@/styles/globals.css";

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

const query = `*[_type == "settings"]{
  ...
}`;

const options = { next: { revalidate: 30 } };

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const { isEnabled } = await draftMode();
  const data = await client.fetch<SanityDocument[]>(
    query, 
    {}, 
    options,
    // isEnabled
    //   ? {
    //       perspective: "previewDrafts",
    //       useCdn: false,
    //       stega: true,
    //     }
    //   : undefined
  );

  console.log(data)

  return (
    <html lang="en" className={`${catalpa.variable} ${itc.variable} antialiased`}>
      <body>
        {children}
        {(await draftMode()).isEnabled && (
          <>
            <VisualEditing />
            <DisableDraftMode />
          </>
        )}
        {process.env.NODE_ENV === 'development' && <TailwindHelper />}
      </body>
    </html>
  );
}
